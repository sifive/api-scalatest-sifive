package scalatest

export def makeTestScalaModule name dir version =
  makeScalaModule name dir version
  | setScalaModuleSourceDirs ("src/test/scala", Nil)
  | setScalaModuleResourceDirs ("src/test/resources", Nil)

export def makeTestScalaModuleFromJSON dir name =
  makeScalaModuleFromJSON dir name
  | setScalaModuleSourceDirs ("src/test/scala", Nil)
  | setScalaModuleResourceDirs ("src/test/resources", Nil)

def id x = x

tuple ScalaTestPlan =
  export Module: ScalaModule
  export Tester: String
  export Testcase: Option String
  export Report: Option String
  export ExtraArgs: List String
  export Resources: List String
  export Visible: List Path
  export Outputs: (List String => List String)

export def makeScalaTestPlan module tester =
  ScalaTestPlan module tester None None Nil Nil Nil id

export def runScalaTest plan =
  def java = which "java"
  def classpath = plan.getScalaTestPlanModule.scalaModuleClasspath
  def cp = classpath | map getPathName | catWith ":"
  def main = "org.scalatest.tools.Runner"
  def testerArgs = "-s", plan.getScalaTestPlanTester, Nil
  def reportArgs = match plan.getScalaTestPlanReport
    Some a = "-fF", a, Nil
    None   = "-oF", Nil
  def testcase = match plan.getScalaTestPlanTestcase
    Some a = "-z", a, Nil
    None   = Nil
  def extraArgs = plan.getScalaTestPlanExtraArgs
  def args = reportArgs ++ testerArgs ++ testcase ++ extraArgs
  def cmd = java, "-cp", cp, main, args
  def resources = plan.getScalaTestPlanResources
  def visibles = plan.getScalaTestPlanVisible
  makePlan cmd (classpath++visibles)
  | editPlanResources (resources ++ _)
  | runJob
